name: Generate PDF from Markdown

on:
  push:
    branches: [main, master]
  workflow_dispatch:

jobs:
  generate-pdf:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Setup Environment
      run: |
        mkdir -p _output _temp
        echo "工作目录结构:"
        find . -type f -name "*.md" | head -20

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          pandoc \
          texlive-xetex \
          texlive-latex-recommended \
          texlive-latex-extra \
          texlive-fonts-recommended \
          texlive-fonts-extra \
          texlive-science \
          texlive-pictures \
          lmodern \
          fonts-noto-cjk \
          fonts-noto-color-emoji \
          poppler-utils  # 用于 pdfinfo

    - name: Find and Combine All Markdown Files
      id: combine_files
      run: |
        echo "🔍 查找所有 Markdown 文件..."
        
        # 查找所有 markdown 文件，排除无关目录
        find . -name "*.md" -type f \
          ! -path "./.git/*" \
          ! -path "./node_modules/*" \
          ! -path "./_output/*" \
          ! -path "./_temp/*" \
          ! -name "README.md" \
          ! -name "CONTRIBUTING.md" \
          ! -name "CHANGELOG.md" > _temp/md_files.txt
        
        # 如果有 README.md，放在最前面
        if [ -f "README.md" ]; then
          echo "README.md" > _temp/combined.md
          echo "---" >> _temp/combined.md
          echo "" >> _temp/combined.md
        fi
        
        # 按数字顺序排序文件（如果文件名以数字开头）
        if [ -s "_temp/md_files.txt" ]; then
          echo "📚 找到以下 Markdown 文件:"
          cat _temp/md_files.txt
          
          # 尝试按数字排序
          cat _temp/md_files.txt | sort -V > _temp/sorted_files.txt
          
          # 合并所有文件
          while IFS= read -r file; do
            if [ -f "$file" ]; then
              echo "添加文件: $file"
              cat "$file" >> _temp/combined.md
              echo "" >> _temp/combined.md
              echo "---" >> _temp/combined.md
              echo "" >> _temp/combined.md
            fi
          done < _temp/sorted_files.txt
        else
          # 如果没有其他文件，只使用 README.md
          if [ -f "README.md" ]; then
            cp README.md _temp/combined.md
          else
            echo "❌ 没有找到任何 Markdown 文件"
            exit 1
          fi
        fi
        
        echo "✅ 合并完成，总大小:"
        ls -lh _temp/combined.md
        echo "行数统计:"
        wc -l _temp/combined.md

    - name: Create LaTeX Header File
      run: |
        mkdir -p _temp
        cat > _temp/header.tex << 'EOFEND'
        \usepackage{titlesec}
        \usepackage{fancyhdr}
        \usepackage{xcolor}
        \usepackage{hyperref}
        \usepackage{bookmark}
        
        % 章节标题样式
        \titleformat{\chapter}[display]
          {\normalfont\huge\bfseries\color{blue!70!black}}
          {\chaptertitlename\ \thechapter}{20pt}{\Huge}
        
        \titleformat{\section}
          {\normalfont\Large\bfseries\color{blue!60!black}}
          {\thesection}{1em}{}
        
        \titleformat{\subsection}
          {\normalfont\large\bfseries\color{blue!50!black}}
          {\thesubsection}{1em}{}
        
        % 页眉页脚设置
        \pagestyle{fancy}
        \fancyhf{}
        \fancyhead[L]{\leftmark}
        \fancyhead[R]{\thepage}
        \renewcommand{\headrulewidth}{0.5pt}
        
        % 超链接设置
        \hypersetup{
          pdfauthor={Richard-Billyham},
          pdftitle={JavaScript权威指南第七版},
          pdfsubject={JavaScript编程指南},
          pdfkeywords={JavaScript,编程,指南},
          bookmarksnumbered=true,
          bookmarksopen=true,
          pdfstartview=FitH,
          linkcolor=blue,
          urlcolor=cyan,
          citecolor=green
        }
        
        % 代码块样式
        \usepackage{listings}
        \usepackage{caption}
        \DeclareCaptionFont{white}{\color{white}}
        \DeclareCaptionFormat{listing}{\colorbox{gray}{\parbox{\textwidth}{#1#2#3}}}
        \captionsetup[lstlisting]{format=listing,labelfont=white,textfont=white}
        
        \lstset{
          backgroundcolor=\color{white},
          basicstyle=\footnotesize\ttfamily,
          breakatwhitespace=false,
          breaklines=true,
          captionpos=b,
          commentstyle=\color{green},
          extendedchars=true,
          frame=single,
          keepspaces=true,
          keywordstyle=\color{blue},
          numbers=left,
          numbersep=5pt,
          numberstyle=\tiny\color{gray},
          rulecolor=\color{black},
          showspaces=false,
          showstringspaces=false,
          showtabs=false,
          stepnumber=1,
          stringstyle=\color{red},
          tabsize=2
        }
        EOFEND

    - name: Generate PDF with All Content
      run: |
        WORKSPACE_PATH="${{ github.workspace }}"
        
        echo "🎯 开始生成完整PDF..."
        echo "输入文件大小: $(ls -lh _temp/combined.md)"
        
        # 生成PDF
        pandoc "_temp/combined.md" -o "_output/javascript-guide.pdf" \
          --metadata title="JavaScript权威指南第七版" \
          --metadata author="Richard-Billyham" \
          --table-of-contents \
          --toc-depth=3 \
          --number-sections \
          --pdf-engine=xelatex \
          -V mainfont="Noto Sans CJK SC" \
          -V sansfont="Noto Sans CJK SC" \
          -V monofont="Noto Sans Mono CJK SC" \
          -V geometry:margin=2.5cm \
          -V geometry:a4paper \
          -V colorlinks=true \
          -V linkcolor=blue \
          -V urlcolor=cyan \
          -V toccolor=blue \
          -V papersize=a4 \
          -V fontsize=11pt \
          -V linestretch=1.2 \
          -V secnumdepth=3 \
          --include-in-header="$WORKSPACE_PATH/_temp/header.tex" \
          --highlight-style=tango \
          --pdf-engine-opt=-shell-escape
        
        echo "✅ PDF生成完成"

    - name: Verify PDF Content
      run: |
        echo "📊 验证PDF文件..."
        if [ ! -f "_output/javascript-guide.pdf" ]; then
          echo "❌ PDF 文件生成失败"
          exit 1
        fi
        
        PDF_SIZE=$(stat -c%s "_output/javascript-guide.pdf")
        echo "PDF 文件大小: $PDF_SIZE 字节"
        
        # 检查PDF基本信息
        if command -v pdfinfo >/dev/null 2>&1; then
          echo "📄 PDF 信息:"
          pdfinfo "_output/javascript-guide.pdf" || echo "无法读取PDF详细信息"
        else
          echo "📄 PDF 文件信息:"
          ls -lh "_output/javascript-guide.pdf"
        fi
        
        # 大小检查 - 如果小于100KB，可能有问题
        if [ "$PDF_SIZE" -lt 102400 ]; then
          echo "⚠️  警告: PDF 文件可能太小，内容可能不完整"
          echo "调试信息:"
          echo "合并的Markdown文件:"
          ls -lh _temp/combined.md
          echo "前100行内容:"
          head -100 _temp/combined.md
          exit 1
        else
          echo "✅ PDF 文件大小正常"
        fi

    - name: Upload PDF Artifact
      uses: actions/upload-artifact@v4
      with:
        name: JavaScript-Guide-PDF
        path: _output/javascript-guide.pdf
        retention-days: 30

    - name: Upload to GitHub Releases
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: _output/javascript-guide.pdf
